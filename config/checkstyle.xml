<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
    <module name="TreeWalker">

        <!-- Annotations -->
        <module name="AnnotationLocation">
            <property name="allowSamelineSingleParameterlessAnnotation" value="false"/>
        </module>
        <module name="SuppressWarningsHolder"/>

        <!-- Block Checks -->
        <module name="AvoidNestedBlocks">
            <property name="allowInSwitchCase" value="true"/>
        </module>
        <module name="EmptyBlock"/>
        <module name="EmptyCatchBlock"/>
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly">
            <property name="tokens" value="METHOD_DEF"/>
            <property name="tokens" value="CTOR_DEF"/>
            <property name="tokens" value="CLASS_DEF"/>
            <property name="tokens" value="INSTANCE_INIT"/>
            <property name="tokens" value="LITERAL_FOR"/>
            <property name="tokens" value="STATIC_INIT"/>
            <property name="tokens" value="LITERAL_WHILE"/>
            <property name="tokens" value="LITERAL_CATCH"/>
            <property name="tokens" value="LITERAL_ELSE"/>
            <property name="tokens" value="LITERAL_FINALLY"/>
            <property name="tokens" value="LITERAL_IF"/>
            <property name="tokens" value="LITERAL_TRY"/>
            <property name="tokens" value="ANNOTATION_DEF"/>
            <property name="tokens" value="ENUM_DEF"/>
            <property name="tokens" value="RECORD_DEF"/>
            <property name="tokens" value="COMPACT_CTOR_DEF"/>
            <property name="option" value="alone"/>
        </module>
        <module name="RightCurly">
            <property name="tokens" value="LITERAL_DO"/>
            <property name="option" value="same"/>
        </module>
        <module name="RightCurly">
            <property name="tokens" value="INTERFACE_DEF"/>
            <property name="option" value="alone_or_singleline"/>
        </module>
        <module name="InnerTypeLast"/>
        <module name="InterfaceIsType"/>
        <module name="MutableException"/>
        <module name="OneTopLevelClass"/>
        <module name="ThrowsCount">
            <property name="max" value="2"/>
        </module>
        <module name="VisibilityModifier">
            <property name="protectedAllowed" value="true"/>
        </module>

        <!-- Coding -->
        <module name="ArrayTrailingComma"/>
        <module name="AvoidDoubleBraceInitialization"/>
        <module name="AvoidInlineConditionals"/>
        <module name="AvoidNoArgumentSuperConstructorCall"/>
        <module name="CovariantEquals"/>
        <module name="DeclarationOrder"/>
        <module name="DefaultComesLast"/>
        <module name="EmptyStatement"/>
        <module name="EqualsAvoidNull"/>
        <module name="EqualsHashCode"/>
        <module name="ExplicitInitialization"/>
        <module name="FallThrough"/>
        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true"/>
            <property name="ignoreSetter" value="true"/>
            <property name="setterCanReturnItsClass" value="true"/>
        </module>
        <module name="IllegalCatch">
            <property name="illegalClassNames"
                      value="java.lang.Exception,
                       java.lang.Throwable,
                       java.lang.RuntimeException,
                       java.lang.NullPointerException"/>
        </module>
        <module name="IllegalThrows"/>
        <module name="InnerAssignment"/>
        <module name="MagicNumber"/>
        <module name="MatchXpath">
            <property name="id" value="singleLineCommentStartWithSpace"/>
            <property name="query"
                      value="//SINGLE_LINE_COMMENT[./COMMENT_CONTENT[not(starts-with(@text, ' '))
                       and not(@text = '\n') and not(ends-with(@text, '//\n'))
                       and not(@text = '\r') and not(ends-with(@text, '//\r'))
                       and not(@text = '\r\n') and not(ends-with(@text, '//\r\n'))]]"/>
            <message key="matchxpath.match" value="Single line comment text should start with space."/>
        </module>
        <module name="MatchXpath">
            <property name="id" value="blockCommentStartWithSpace"/>
            <property name="query"
                      value="//BLOCK_COMMENT_BEGIN[./COMMENT_CONTENT[matches(@text, '\\n+ *\*[^\\n ]\S')
                       or matches(@text, '^[^\* \\n]') or matches(@text, '\\r+ *\*[^\\r ]\S')
                       or matches(@text, '^[^\* \\r]') or matches(@text, '\\r\\n+ *\*[^\\r\\n ]\S')
                       or matches(@text, '^[^\* \\r\\n]') and not(starts-with(@text, '*'))]]"/>
            <message key="matchxpath.match"
                     value="Block comment text should start with space after asterisk."/>
        </module>
        <module name="MissingSwitchDefault"/>
        <module name="ModifiedControlVariable"/>
        <module name="MultipleStringLiterals"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="NestedForDepth">
            <property name="max" value="2"/>
        </module>
        <module name="NestedIfDepth">
            <property name="max" value="3"/>
        </module>
        <module name="NestedTryDepth"/>
        <module name="NoFinalizer"/>
        <module name="OneStatementPerLine"/>
        <module name="OverloadMethodsDeclarationOrder"/>
        <module name="PackageDeclaration"/>
        <module name="ParameterAssignment"/>
        <module name="RequireThis"/>
        <module name="ReturnCount">
            <property name="max" value="3"/>
            <property name="maxForVoid" value="0"/>
        </module>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="SuperClone"/>
        <module name="SuperFinalize"/>
        <module name="UnnecessaryParentheses"/>
        <module name="UnnecessarySemicolonAfterOuterTypeDeclaration"/>
        <module name="UnnecessarySemicolonAfterTypeMemberDeclaration"/>
        <module name="UnnecessarySemicolonInEnumeration"/>
        <module name="UnnecessarySemicolonInTryWithResources"/>
        <module name="UnusedLocalVariable"/>
        <module name="VariableDeclarationUsageDistance"/>

        <!-- Imports -->
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>


        <!-- Javadoc -->
        <module name="MissingJavadocMethod">
            <property name="minLineCount" value="15"/>
            <property name="scope" value="private"/>
        </module>

        <!-- Metrics -->
        <module name="BooleanExpressionComplexity">
            <property name="max" value="7"/>
        </module>
        <module name="CyclomaticComplexity">
            <property name="switchBlockAsSingleDecisionPoint" value="true"/>
        </module>
        <module name="JavaNCSS"/>
        <module name="NPathComplexity"/>


        <!-- Misc -->
        <module name="ArrayTypeStyle"/>
        <module name="AvoidEscapedUnicodeCharacters">
            <property name="allowIfAllCharactersEscaped" value="true"/>
        </module>
        <module name="CommentsIndentation"/>
        <module name="Indentation">
            <property name="basicOffset" value="4"/>
            <property name="braceAdjustment" value="0"/>
            <property name="caseIndent" value="4"/>
            <property name="throwsIndent" value="8"/>
        </module>
        <module name="OuterTypeFilename"/>

        <!-- Modifiers -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>


        <!-- Naming Conventions -->
        <module name="AbstractClassName"/>
        <module name="ClassTypeParameterName"/>
        <module name="RecordTypeParameterName"/>
        <module name="RecordComponentName"/>
        <module name="ConstantName"/>
        <module name="InterfaceTypeParameterName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName">
            <property name="format" value="^(id)|([a-z][a-z0-9][a-zA-Z0-9]+)$"/>
        </module>
        <module name="MemberName">
            <property name="format" value="^(id)|([a-z][a-z0-9][a-zA-Z0-9]+)$"/>
        </module>
        <module name="MethodName"/>
        <module name="MethodTypeParameterName"/>
        <module name="PackageName"/>
        <module name="ParameterName">
            <property name="format" value="^(id)|([a-z][a-z0-9][a-zA-Z0-9]+)$"/>
            <property name="ignoreOverridden" value="true"/>
        </module>
        <module name="LambdaParameterName">
            <property name="format" value="^(id)|([a-z][a-z0-9][a-zA-Z0-9]+)$"/>
        </module>
        <module name="CatchParameterName">
            <property name="format" value="^(ex|[a-z][a-z][a-zA-Z]+)$"/>
        </module>
        <module name="StaticVariableName">
            <property name="format" value="^(id)|([a-z][a-z0-9][a-zA-Z0-9]+)$"/>
        </module>
        <module name="TypeName"/>
        <module name="PatternVariableName"/>


        <!-- Size Violations -->
        <module name="AnonInnerLength"/>
        <module name="ExecutableStatementCount">
            <property name="max" value="30"/>
        </module>
        <module name="LambdaBodyLength"/>
        <module name="MethodCount">
            <property name="maxTotal" value="34"/>
        </module>
        <module name="MethodLength"/>
        <module name="OuterTypeNumber"/>
        <module name="ParameterNumber"/>

        <!-- Whitespace -->
        <module name="EmptyForInitializerPad"/>
        <module name="EmptyForIteratorPad"/>
        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
            <property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/>
        </module>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoLineWrap"/>
        <module name="NoWhitespaceAfter">
            <property name="tokens" value="ARRAY_INIT"/>
            <property name="tokens" value="AT"/>
            <property name="tokens" value="BNOT"/>
            <property name="tokens" value="DEC"/>
            <property name="tokens" value="DOT"/>
            <property name="tokens" value="INC"/>
            <property name="tokens" value="LNOT"/>
            <property name="tokens" value="UNARY_MINUS"/>
            <property name="tokens" value="UNARY_PLUS"/>
            <property name="tokens" value="ARRAY_DECLARATOR"/>
            <property name="tokens" value="INDEX_OP"/>
            <property name="tokens" value="METHOD_REF"/>
        </module>
        <module name="NoWhitespaceBefore"/>
        <module name="NoWhitespaceBeforeCaseDefaultColon"/>
        <module name="NoWhitespaceBefore">
            <property name="tokens" value="DOT"/>
            <property name="tokens" value="METHOD_REF"/>
            <property name="allowLineBreaks" value="true"/>
        </module>
        <module name="OperatorWrap">
            <property name="tokens" value="QUESTION"/>
            <property name="tokens" value="COLON"/>
            <property name="tokens" value="EQUAL"/>
            <property name="tokens" value="NOT_EQUAL"/>
            <property name="tokens" value="DIV"/>
            <property name="tokens" value="PLUS"/>
            <property name="tokens" value="MINUS"/>
            <property name="tokens" value="STAR"/>
            <property name="tokens" value="MOD"/>
            <property name="tokens" value="SR"/>
            <property name="tokens" value="BSR"/>
            <property name="tokens" value="GE"/>
            <property name="tokens" value="GT"/>
            <property name="tokens" value="SL"/>
            <property name="tokens" value="LE"/>
            <property name="tokens" value="LT"/>
            <property name="tokens" value="BXOR"/>
            <property name="tokens" value="BOR"/>
            <property name="tokens" value="LOR"/>
            <property name="tokens" value="BAND"/>
            <property name="tokens" value="LAND"/>
            <property name="tokens" value="TYPE_EXTENSION_AND"/>
            <property name="tokens" value="LITERAL_INSTANCEOF"/>
            <property name="tokens" value="METHOD_REF"/>
            <property name="option" value="nl"/>
        </module>
        <module name="OperatorWrap">
            <property name="tokens" value="ASSIGN"/>
            <property name="tokens" value="DIV_ASSIGN"/>
            <property name="tokens" value="PLUS_ASSIGN"/>
            <property name="tokens" value="MINUS_ASSIGN"/>
            <property name="tokens" value="STAR_ASSIGN"/>
            <property name="tokens" value="MOD_ASSIGN"/>
            <property name="tokens" value="SR_ASSIGN"/>
            <property name="tokens" value="BSR_ASSIGN"/>
            <property name="tokens" value="SL_ASSIGN"/>
            <property name="tokens" value="BXOR_ASSIGN"/>
            <property name="tokens" value="BOR_ASSIGN"/>
            <property name="tokens" value="BAND_ASSIGN"/>
            <property name="option" value="eol"/>
        </module>
        <module name="ParenPad"/>
        <module name="SeparatorWrap">
            <property name="tokens" value="DOT"/>
            <property name="tokens" value="AT"/>
            <property name="tokens" value="METHOD_REF"/>
            <property name="option" value="nl"/>
        </module>
        <module name="SeparatorWrap">
            <property name="tokens" value="COMMA"/>
            <property name="tokens" value="RBRACK"/>
            <property name="tokens" value="ARRAY_DECLARATOR"/>
            <property name="tokens" value="ELLIPSIS"/>
            <property name="tokens" value="SEMI"/>
            <property name="option" value="EOL"/>
        </module>
        <module name="SingleSpaceSeparator">
            <property name="validateComments" value="false"/>
        </module>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>
    </module>

    <!-- Size Violations -->
    <module name="FileLength">
        <property name="fileExtensions" value="java"/>
    </module>
    <module name="LineLength">
        <property name="fileExtensions" value="java"/>
        <property name="max" value="100"/>
        <property name="ignorePattern"
                  value="^( *\* *([^ ]+|\{@code .*|&lt;a href=&quot;[^&quot;]+&quot;&gt;)|(package|import) .*)$"/>
    </module>

    <module name="NewlineAtEndOfFile"/>
    <module name="SuppressWarningsFilter"/>
</module>
